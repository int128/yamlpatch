# JSON Patch conformance tests
# https://github.com/json-patch/json-patch-tests/blob/master/tests.json

# replace

- "comment": "Toplevel scalar values OK?"
  "doc": "foo"
  "patch": [ { "op": "replace", "path": "", "value": "bar" } ]
  "expected": "bar"

- "doc": { "foo": 1, "baz": [ { "qux": "hello" } ] }
  "patch": [ { "op": "replace", "path": "/foo", "value": [ 1, 2, 3, 4 ] } ]
  "expected": { "foo": [ 1, 2, 3, 4 ], "baz": [ { "qux": "hello" } ] }

- "doc": { "foo": [ 1, 2, 3, 4 ], "baz": [ { "qux": "hello" } ] }
  "patch": [ { "op": "replace", "path": "/baz/0/qux", "value": "world" } ]
  "expected": { "foo": [ 1, 2, 3, 4 ], "baz": [ { "qux": "world" } ] }

- "doc": [ "foo" ]
  "patch": [ { "op": "replace", "path": "/0", "value": "bar" } ]
  "expected": [ "bar" ]

- "doc": [ "" ]
  "patch": [ { "op": "replace", "path": "/0", "value": 0 } ]
  "expected": [ 0 ]

- "doc": [ "" ]
  "patch": [ { "op": "replace", "path": "/0", "value": true } ]
  "expected": [ true ]

- "doc": [ "" ]
  "patch": [ { "op": "replace", "path": "/0", "value": false } ]
  "expected": [ false ]

- "doc": [ "" ]
  "patch": [ { "op": "replace", "path": "/0", "value": null } ]
  "expected": [ null ]

- "doc": [ "foo", "sil" ]
  "patch": [ { "op": "replace", "path": "/1", "value": [ "bar", "baz" ] } ]
  "expected": [ "foo", [ "bar", "baz" ] ]
  "comment": "value in array replace not flattened"

- "comment": "replace whole document"
  "doc": { "foo": "bar" }
  "patch": [ { "op": "replace", "path": "", "value": { "baz": "qux" } } ]
  "expected": { "baz": "qux" }

- "comment": "test replace with missing parent key should fail"
  "doc": { "bar": "baz" }
  "patch": [ { "op": "replace", "path": "/foo/bar", "value": false } ]
  "error": "replace op should fail with missing parent key"

- "doc": { "foo": null }
  "patch": [ { "op": "replace", "path": "/foo", "value": "truthy" } ]
  "expected": { "foo": "truthy" }
  "comment": "null value should be valid obj property to be replaced with something truthy"

- "doc": { "foo": "bar" }
  "patch": [ { "op": "replace", "path": "/foo", "value": null } ]
  "expected": { "foo": null }
  "comment": "null value should still be valid obj property replace other value"

- "comment": "test replace with bad number should fail"
  "doc": [ "" ]
  "patch": [ { "op": "replace", "path": "/1e0", "value": false } ]
  "error": "replace op shouldn't replace in array with bad number"

- "comment": "missing 'value' parameter to replace"
  "doc": [ 1 ]
  "patch": [ { "op": "replace", "path": "/0" } ]
  "error": "missing 'value' parameter"
